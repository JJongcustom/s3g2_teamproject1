<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.ilinbun.mulcam.dao.CommunityDAO">

<!-- 글쓰기 시 : 현재 articleNo가 어디까지(Max)인지 알려주는 쿼리문 -->
   <select id="selectMaxArticleNo" resultType="integer">
      <!-- autoIncrement를 대신할 sql문 처리하는 함수라고 생각하자. PK가 최대값을 반환하여 다음 글쓰기의 번호를 해당 함수의 리턴값에 +1 하면 된다.
      null일 경우 값을 가져오기 위해서(null로) 래퍼클래스인 integer로 반환한다. -->
      <![CDATA[
         select max(articleNo) from comm_board
      ]]>
   </select>
   
      <!-- 글쓰기, 글목록 -->
   <insert id="insertCommBoard" parameterType="CommBoard">
       <![CDATA[
          insert into comm_board (idx, title, content)
          values (#{idx}, #{title}, #{content})
       ]]>
   </insert>
   
      <!-- 글보기 : articleNo를 가지고 게시글을 조회 -->
   <select id="selectCommBoard" resultType="CommBoard"
      parameterType="int">
       <![CDATA[
         select * from comm_board where articleNo=#{articleNo}
       ]]>
   </select>
   <!-- 글보기 : 게시글 조회수(+1) -->
   <update id="updateReadCount" parameterType="int">
       <![CDATA[
          update comm_board set views=views+1 where articleNo=#{articleNo} 
       ]]>
   </update>
   
   
   <!-- 글목록 : 게시판 글 목록에 15개 출력 쿼리문 -->
   <!-- <select id="selectCommBoardList" resultType="CommBoard"
      parameterType="int">
      SELECT * from comm_board order by field(idx, idx in (select idx from user where grp = 2 )) desc
       	union all
       	select * from comm_board where articleNo between #{startrow} and #{startrow}+14
       <![CDATA[
       	SELECT * from comm_board order by case when idx in (select idx from user where grp = 2 ) then 0 else 1 end, date desc limit #{startrow}, 15
       ]]>
   </select>   select * from comm_board where articleNo order by desc between #{startrow} and #{startrow}+14 -->
   <!-- 글목록 : 전체게시물 조회하기 -->
	<select id="selectCommBoardList" resultType="CommBoard" parameterType="int">
		<![CDATA[
			select * 
				from (select @rownum:=@rownum+1 rnum, tot.*
					from (select * from comm_board where idx in (select idx from user where grp = 1) order by date desc) tot,   
						(select @rownum:=0) temp) sub
			where rnum between #{startrow} and #{startrow}+14
		]]>
	</select>
	<!-- <select id="selectCommBoardCount" resultType="int">
       <![CDATA[
          select count(*) from comm_board
       ]]>
   </select> -->
   <select id="selectCommBoardCount" resultType="int">
       <![CDATA[
          select count(*) from comm_board where idx in (select idx from user where grp = 1)
       ]]>
   </select>
   




   <!-- 게시물 수정 :articleNo를 가지고 게시글을 조회해서 수정함 -->
   <update id="updateCommBoard" parameterType="CommBoard">
      <![CDATA[
     
      update comm_board set title=#{title},content=#{content} where articleNo=#{articleNo}
       ]]>
   </update>
   <!-- 게시물 삭제 : articleNo를 가지고 게시글을 조회해서 삭제함 ***글 삭제하면 목록 빵꾸나는 issue 어떻게 
      할 것인가 -->
   <delete id="deleteCommBoard" parameterType="int">
      <![CDATA[
      delete from comm_board where articleNo=#{articleNo}
       ]]>
   </delete>
   
   
   
   
 <!--        [커뮤니티 공지사항] 글 맨위로 뜨게 (종현)
   	List<CommBoard> commNotice() throws Exception; -->
   <select id="commNotice" resultType="CommBoard">
		<![CDATA[
			SELECT * FROM comm_board where idx in (select idx from user where grp = 2) order by articleNo desc LIMIT 3
		]]>
	</select>
   
   <!-- @@@@@@@좋아요@@@@@@@@@@ -->
	<select id="queryArticleLikes" resultType="integer" parameterType="int">
		<![CDATA[
			select count(*) from commLikes where articleNo=#{articleNo}
		]]>
	</select> 
	
	<select id="queryIfILikeThis" resultType="Integer" parameterType="Map">
		<![CDATA[
			select count(*) from commLikes where articleNo=#{articleNo} and idx=#{idx}
		]]>
	</select> 
	
	<insert id="addArticleLikes" parameterType="Map">
		<![CDATA[
			insert into commLikes values(#{articleNo}, #{idx})
		]]>
	</insert> 
	
	<delete id="removeArticleLikes" parameterType="Map">
		<![CDATA[
			delete from commLikes where articleNo=#{articleNo} and idx=#{idx}
		]]>
	</delete> 
	
	
   	<!-- 댓글달기 -->
	<insert id="insertReply" parameterType="Map">
 		<![CDATA[
 		insert into comm_comment (articleNo, idx, comment, blind, refer, lev, seq)
 			values (#{articleNo}, #{idx}, #{comment}, #{blind}, #{refer}, #{lev}, #{seq})
 		]]>
	</insert>
	
			<!-- 댓글보기 -->
			<!-- select commentNo, articleNo, idx,date, comment, blind, refer, lev, seq -->
	<select id="selectReplyList" parameterType="Map" resultType="CommReply">
		<![CDATA[
			select commentNo, articleNo, idx,date, comment, blind, refer, lev, seq
				from (select @rownum:=@rownum+1 rnum, tot.*
					from (select * from comm_comment where articleNo=#{articleNo} order by refer desc, seq asc, date desc) tot,
							(select @rownum:=0) temp) sub
				where rnum between #{startrow} and #{startrow}+9
		]]>
	</select> 
	<select id="selectReply" parameterType="int" resultType="CommReply">
		<![CDATA[
			select * from comm_comment where commentNo=#{commentNo}
		]]>
	</select>
	<select id="selectMaxCommentNo" resultType="Integer">
		<![CDATA[
			select max(commentNo) from comm_comment
		]]>
	</select>
	
			<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="int">
		<![CDATA[
		delete from comm_comment where commentNo=#{commentNo}
		 ]]>
	</delete>
	
	<!-- 댓글수정 --> 
	<update id="editReply" parameterType="Map">
		<![CDATA[
		update comm_comment set comment = #{comment} where commentNo = #{commentNo}
		 ]]>
	</update>
	
	<!-- 익명댓글 처리 -->
	<update id="setBlind" parameterType="Map">
		<![CDATA[
		update comm_comment set blind = #{blind} where commentNo = #{commentNo}
		 ]]>
	</update>
	
	<select id="countComment" resultType="Integer" parameterType="int">
		<![CDATA[
			select count(*) from comm_comment where articleNo=#{articleNo}
		]]>
	</select>
	
	<update id="updateCommentSeq" parameterType="CommReply">
		<![CDATA[
			update comm_comment set seq=seq+1 
			where refer=#{refer} and seq>#{seq}
		]]>
	</update>
   
   
   
   
   <!-- 사용자의 커뮤니티 게시글을 아이디(idx)를 이용해 게시물을 조회하여 마이페이지에 뿌려준다.(준근) -->
	<select id="selectCommunityBoardByIdx" resultType="CommBoard" parameterType="int">
 		<![CDATA[
 			select * from comm_board where idx=#{idx} order by date desc limit 10
 		]]>
	</select>
</mapper>


   

   <!-- 댓글 쿼리일까 싶어 남겨둔 코드 -->
   <!--아래는 답변 기능 구현시 기존 글들의 seq번호를 추가해주는 작업을 하는 쿼리문에 해당한다. 이는 최신에 답변된 글이 원글 
      바로 밑에 위치하도록 하기 위함이다. : 이거랑 위에랑.. 댓글로 변경.. -->
   <!-- <update id="updateCommBoardReSeq" parameterType="CommBoard"> 
   <![CDATA[ 
      update comm_board set articleNo=articleNo+1 where articleNo=#{articleNo} 
      and articleNo>#{articleNo} ]]> </update> 원글과 ref는 같고 원글의 seq보다 큰 글들의 seq를 
      +1 시켜준다. 즉, 위의 조건은 원글의 기존 답변글들의 목록에 해당한다. -->

   <!-- 알수없는 코드들 -->
   <!-- <select id="selectCommList" resultType="CommBoard" parameterType="int" 
      > <![CDATA[ select * from comm_board order by date desc limit #{startrow},15 
      ]]> </select> -->